{"version":3,"sources":["webpack:///./src/views/admin/OrderAnalysis.vue?dc96","webpack:///src/views/admin/OrderAnalysis.vue","webpack:///./src/views/admin/OrderAnalysis.vue?7d8f","webpack:///./src/views/admin/OrderAnalysis.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","_v","formOptions","on","selectForm","model","value","callback","$$v","formSelected","expression","_l","tableData","card","menu","menuKey","key","_s","itemList","byKey","noon","night","setList","orderTime","isLoading","staticRenderFns","name","data","adminDoc","orderDoc","formListSheet","formListRows","rows","interval","orders","leftMenu","tableColumns","single","set","all","periodKey","props","editSheet","String","components","Loading","created","accessSpreadSheet","methods","getAnalysis","_group","type","push","_item","total","is_take","not_take","subItem","_time","includes","order","take_time","_subItems","orderTime_format","_left","_data","period","itemName","sumAll","_timeData","Object","hasOwnProperty","call","autoUpdate","setInterval","console","log","stopUpdate","clearInterval","component"],"mappings":"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","file":"js/chunk-2d0e9da1.cff05744.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('b-form',{staticClass:\"mb-4\",attrs:{\"inline\":\"\"}},[_c('label',{staticClass:\"mr-sm-2\"},[_vm._v(\"表單\")]),_c('b-form-select',{staticClass:\"mb-2 mr-sm-2 mb-sm-0\",attrs:{\"options\":_vm.formOptions,\"size\":\"lg\"},on:{\"change\":_vm.selectForm},model:{value:(_vm.formSelected),callback:function ($$v) {_vm.formSelected=$$v},expression:\"formSelected\"}})],1),_c('b-tabs',{attrs:{\"pills\":\"\",\"card\":\"\"}},[_c('b-tab',{attrs:{\"title\":\"全天\",\"active\":\"\"}},[_c('b-row',_vm._l((_vm.tableData.card.single),function(menu,menuKey){return _c('b-col',{key:'allday_single_'+menuKey,attrs:{\"md\":\"3\"}},[_c('b-card',{staticClass:\"text-center\",attrs:{\"no-body\":\"\"}},[_c('div',[_c('p',{staticClass:\"text-muted\"},[_vm._v(_vm._s(_vm.itemList.byKey[menuKey]['name']))]),_c('h2',{staticClass:\"mb-2\"},[_vm._v(_vm._s(menu.noon)+\"/\"+_vm._s(menu.night))])])])],1)}),1),_c('b-row',_vm._l((_vm.tableData.card.set),function(menu,menuKey){return _c('b-col',{key:'allday_set_'+menuKey,attrs:{\"md\":\"3\"}},[_c('b-card',{staticClass:\"text-center\",attrs:{\"no-body\":\"\"}},[_c('div',[_c('p',{staticClass:\"text-muted\"},[_vm._v(_vm._s(_vm.setList.byKey[menuKey]['title']))]),_c('h2',{staticClass:\"mb-2\"},[_vm._v(_vm._s(menu.noon)+\"/\"+_vm._s(menu.night))])])])],1)}),1)],1),_c('b-tab',{attrs:{\"title\":\"午\"}},[_c('b-table',{attrs:{\"border\":\"\",\"hover\":\"\",\"head-variant\":\"dark\",\"items\":_vm.tableData.noon,\"fields\":_vm.orderTime.noon}})],1),_c('b-tab',{attrs:{\"title\":\"晚\"}},[_c('b-table',{attrs:{\"border\":\"\",\"hover\":\"\",\"head-variant\":\"dark\",\"items\":_vm.tableData.night,\"fields\":_vm.orderTime.night}})],1)],1),_c('Loading',{attrs:{\"isLoading\":_vm.isLoading}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <b-form inline class=\"mb-4\">\r\n      <label class=\"mr-sm-2\">表單</label>\r\n      <b-form-select\r\n        class=\"mb-2 mr-sm-2 mb-sm-0\"\r\n        :options=\"formOptions\"\r\n        v-model=\"formSelected\"\r\n        @change=\"selectForm\"\r\n        size=\"lg\"\r\n      ></b-form-select>\r\n    </b-form>\r\n    \r\n    <b-tabs pills card>\r\n      <b-tab title=\"全天\" active>\r\n        <b-row>\r\n          <b-col md=\"3\" v-for=\"(menu, menuKey) in tableData.card.single\" :key=\"'allday_single_'+menuKey\">\r\n            <b-card no-body class=\"text-center\">\r\n              <div>\r\n                <p class=\"text-muted\">{{ itemList.byKey[menuKey]['name'] }}</p>\r\n                <h2 class=\"mb-2\">{{ menu.noon }}/{{ menu.night }}</h2>\r\n              </div>\r\n            </b-card>\r\n          </b-col>\r\n        </b-row>\r\n        <b-row>\r\n          <b-col md=\"3\" v-for=\"(menu, menuKey) in tableData.card.set\" :key=\"'allday_set_'+menuKey\">\r\n            <b-card no-body class=\"text-center\">\r\n              <div>\r\n                <p class=\"text-muted\">{{ setList.byKey[menuKey]['title'] }}</p>\r\n                <h2 class=\"mb-2\">{{ menu.noon }}/{{ menu.night }}</h2>\r\n              </div>\r\n            </b-card>\r\n          </b-col>\r\n        </b-row>\r\n        <!-- <CDataTable\r\n          border\r\n          :items=\"tableData.all\"\r\n          :fields=\"orderTime.all\"\r\n        >\r\n        </CDataTable> -->\r\n      </b-tab>\r\n      <b-tab title=\"午\">\r\n        <b-table\r\n          border\r\n          hover\r\n          head-variant=\"dark\"\r\n          :items=\"tableData.noon\"\r\n          :fields=\"orderTime.noon\"\r\n        ></b-table>\r\n      </b-tab>\r\n      <b-tab title=\"晚\">\r\n        <b-table\r\n          border\r\n          hover\r\n          head-variant=\"dark\"\r\n          :items=\"tableData.night\"\r\n          :fields=\"orderTime.night\"\r\n        ></b-table>\r\n      </b-tab>\r\n    </b-tabs>\r\n    <Loading :isLoading=\"isLoading\"/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport moment from 'moment'\r\nimport Loading from '@/views/Loading'\r\n\r\nimport { getMenu } from '@/views/getMenu';\r\nimport { getSettingDoc } from '@/gapi/getSettingDoc';\r\nimport { getOrderDoc } from '@/gapi/getOrderDoc';\r\nimport 'animate.css';\r\n\r\nexport default {\r\n  name: 'OrderAnalysis',\r\n  data () {\r\n    return {\r\n      isLoading: true,\r\n      adminDoc: null,\r\n      orderDoc: null,\r\n      formListSheet: null,\r\n      formListRows: {\r\n        rows: [],\r\n        byKey: {}\r\n      },\r\n      formSelected: null,\r\n      formOptions: [],\r\n      interval:null,\r\n      //訂單總資料\r\n      orders: [],\r\n      leftMenu: [\"\"],\r\n      tableColumns: {\r\n        single: {},\r\n        set: {}\r\n      },\r\n      tableData: {\r\n        card: {\r\n          single: {},\r\n          set: {}\r\n        },\r\n        all: [],\r\n        noon: [],\r\n        night: []\r\n      },\r\n      orderTime: {\r\n        all: [],\r\n        noon: [],\r\n        night: []\r\n      },\r\n      setList: {\r\n        rows: [],\r\n        byKey: {}\r\n      },\r\n      itemList: {\r\n        rows: [],\r\n        byKey: {}\r\n      },\r\n      menu:[],\r\n      periodKey: [\"all\", \"noon\", \"night\"]\r\n    }\r\n  },\r\n  props: {\r\n    editSheet: String,\r\n  },\r\n  components: {\r\n    Loading,\r\n  },\r\n  created() {\r\n    moment.locale(\"zh-tw\");\r\n    this.accessSpreadSheet();\r\n    //this.autoUpdate();\r\n  },\r\n  methods:{\r\n    async accessSpreadSheet() {\r\n      this.adminDoc = await getSettingDoc();\r\n      //訂單表\r\n      this.orderDoc = await getOrderDoc();\r\n      this.formListSheet = this.adminDoc.sheetsByTitle['表單列表'];\r\n      this.formListRows.rows = await this.formListSheet.getRows();\r\n      const itemListSheet = this.adminDoc.sheetsByTitle['品項'];\r\n      const itemListRows = await itemListSheet.getRows();\r\n      //品項資料\r\n      for (let index = 0; index < itemListRows.length; index++) {\r\n        const item = itemListRows[index];\r\n        //品項\r\n        if (item.id) {\r\n          this.itemList.rows.push(item);\r\n          this.itemList.byKey[item.id] = item;\r\n        }\r\n      }\r\n      \r\n      this.init();\r\n      this.getAnalysis();\r\n    },\r\n    async init() {\r\n      //表單設定\r\n      this.formOptions = [];\r\n      for (let index = this.formListRows.rows.length - 1; index >= 0; index--) {\r\n        const form = this.formListRows.rows[index];\r\n        \r\n        this.formListRows.byKey[form.sheetTitle] = form;\r\n        form.order_time = JSON.parse(form.order_time);\r\n        form.groups = JSON.parse(form.groups);\r\n        //表單列表\r\n        this.formOptions.push({\r\n          text: form.title,\r\n          value: form.sheetTitle\r\n        });\r\n        //初始顯示表單\r\n        if (this.formSelected == null) {\r\n          if (this.editSheet != null) {\r\n            if (form.sheetTitle == this.editSheet) {\r\n              this.getForm(form);\r\n            }\r\n          } else if (moment().isAfter(form.start_time) && moment().isBefore(form.end_time)) {\r\n            this.getForm(form);\r\n          }\r\n        }\r\n      }\r\n      //預設最後一筆\r\n      if (this.formSelected == null) {\r\n        this.getForm(this.formListRows.rows[this.formListRows.rows.length - 1]);\r\n      }\r\n    },\r\n    //顯示預訂清單\r\n    async selectForm() {\r\n      this.isLoading = true;\r\n      \r\n      for (let index = 0; index < this.formListRows.rows.length; index++) {\r\n        const form = this.formListRows.rows[index];\r\n        \r\n        if (this.formSelected == form.sheetTitle) {\r\n          this.getForm(form).then(function() {\r\n            \r\n          });\r\n          break;\r\n        }\r\n      }\r\n    },\r\n    async getForm(form) {\r\n      this.formSelected = form.sheetTitle;\r\n      this.menu = await getMenu(this.adminDoc, form.groups, true);\r\n      const sheet = this.orderDoc.sheetsByTitle[this.formSelected];\r\n      this.orders = await sheet.getRows();\r\n      //取餐時間\r\n      this.orderTime = {\r\n        all: [{key: \"menu\", label: \"品項\"}],\r\n        noon: [{key: \"menu\", label: \"品項\"}],\r\n        night: [{key: \"menu\", label: \"品項\"}]\r\n      }\r\n      for (let index = 0; index < form.order_time.length; index++) {\r\n        const _time = form.order_time[index];\r\n        //上午\r\n        if (moment(\"2000-01-01 \" + _time).isBefore(\"2000-01-01 14:00\")) {\r\n          this.orderTime.noon.push(_time);\r\n        } else {\r\n          this.orderTime.night.push(_time);\r\n        }\r\n        this.orderTime.all.push(_time);\r\n      }\r\n      this.orderTime.noon.push({key: \"total\", label: \"總\"});\r\n      this.orderTime.night.push({key: \"total\", label: \"總\"});\r\n      this.orderTime.all.push({key: \"total\", label: \"總\"});\r\n      \r\n      this.getAnalysis();\r\n    },\r\n    //統計數量\r\n    getAnalysis: function() {\r\n      this.tableData = {\r\n        card: {\r\n          single: {},\r\n          set: {}\r\n        },\r\n        all: [],\r\n        noon: [],\r\n        night: []\r\n      }\r\n      this.tableColumns = {\r\n        single: {},\r\n        set: {}\r\n      }\r\n      this.leftMenu = [\"\"];\r\n      for (let index = 0; index < this.menu.length; index++) {\r\n        const _group = this.menu[index];\r\n\r\n        if (_group.type == \"set\") {\r\n          for (let itemIndex = 0; itemIndex < _group.items.length; itemIndex++) {\r\n            const _item = _group.items[itemIndex];\r\n            \r\n            //套餐品項\r\n            this.setList.rows.push(_item);\r\n            this.setList.byKey[_item.key] = _item;\r\n\r\n            if (!this.tableColumns.set[_item.key]) {\r\n              this.tableColumns.set[_item.key] = {\r\n                total: {\r\n                  is_take: 0,\r\n                  not_take: 0,\r\n                }\r\n              }\r\n            }\r\n            for (let subItemIndex = 0; subItemIndex < _item.subItems.length; subItemIndex++) {\r\n              const subItem = _item.subItems[subItemIndex];\r\n              \r\n              if (!this.tableColumns.single[subItem.key]) {\r\n                this.tableColumns.single[subItem.key] = {\r\n                  total: {\r\n                    is_take: 0,\r\n                    not_take: 0,\r\n                  }\r\n                }\r\n              }\r\n              for (let timeIndex = 0; timeIndex < this.orderTime.all.length; timeIndex++) {\r\n                const _time = this.orderTime.all[timeIndex];\r\n                \r\n                if (_time != \"menu\") {\r\n                  if (!this.tableColumns.set[_item.key][_time]) {\r\n                    this.tableColumns.set[_item.key][_time] = {\r\n                      is_take: 0,\r\n                      not_take: 0,\r\n                    }\r\n                  }\r\n                  if (!this.tableColumns.single[subItem.key][_time]) {\r\n                    this.tableColumns.single[subItem.key][_time] = {\r\n                      is_take: 0,\r\n                      not_take: 0,\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              if (!this.leftMenu.includes(subItem.key)) {\r\n                this.leftMenu.push(subItem.key);\r\n              }\r\n            }\r\n          }\r\n        } else {\r\n          for (let itemIndex = 0; itemIndex < _group.items.length; itemIndex++) {\r\n            const _item = _group.items[itemIndex];\r\n            \r\n            if (!this.tableColumns.single[_item.key]) {\r\n              this.tableColumns.single[_item.key] = {\r\n                total: {\r\n                  is_take: 0,\r\n                  not_take: 0,\r\n                }\r\n              }\r\n            }\r\n            for (let timeIndex = 0; timeIndex < this.orderTime.all.length; timeIndex++) {\r\n              const _time = this.orderTime.all[timeIndex];\r\n              \r\n              if (_time != \"menu\" && !this.tableColumns.single[_item.key][_time]) {\r\n                this.tableColumns.single[_item.key][_time] = {\r\n                  is_take: 0,\r\n                  not_take: 0,\r\n                }\r\n              }\r\n            }\r\n            if (!this.leftMenu.includes(_item.key)) {\r\n              this.leftMenu.push(_item.key);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      //分配各品項數量\r\n      for (let index = 0; index < this.orders.length; index++) {\r\n        const order = this.orders[index];\r\n        const orderTime_format = moment(order.order_time).format(\"HH:mm\");\r\n        const detail = JSON.parse(order.detail);\r\n        \r\n        for (let index = 0; index < detail.length; index++) {\r\n          const _item = detail[index];\r\n          //套餐\r\n          if (_item.type == \"set\") {\r\n            if (order.take_time == \"\") {\r\n              this.tableColumns.set[_item.key][orderTime_format].not_take += _item.number;\r\n              this.tableColumns.set[_item.key][\"total\"].not_take += _item.number;\r\n            } else {\r\n              this.tableColumns.set[_item.key][orderTime_format].is_take += _item.number;\r\n              this.tableColumns.set[_item.key][\"total\"].is_take += _item.number;\r\n            }\r\n\r\n            for (let index = 0; index < _item.items.length; index++) {\r\n              const _subItems = _item.items[index];\r\n              \r\n              if (order.take_time == \"\") {\r\n                this.tableColumns.single[_subItems.key][orderTime_format].not_take += _item.number;\r\n                this.tableColumns.single[_subItems.key][\"total\"].not_take += _item.number;\r\n              } else {\r\n                this.tableColumns.single[_subItems.key][orderTime_format].is_take += _item.number;\r\n                this.tableColumns.single[_subItems.key][\"total\"].is_take += _item.number;\r\n              }\r\n            }\r\n          }\r\n          //單點\r\n          else if (_item.type == \"single\") {\r\n            if (order.take_time == \"\") {\r\n              this.tableColumns.single[_item.key][orderTime_format].not_take += _item.number;\r\n              this.tableColumns.single[_item.key][\"total\"].not_take += _item.number;\r\n            } else {\r\n              this.tableColumns.single[_item.key][orderTime_format].is_take += _item.number;\r\n              this.tableColumns.single[_item.key][\"total\"].is_take += _item.number;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      //表格單品資料\r\n      for (let leftIndex = 0; leftIndex < this.leftMenu.length; leftIndex++) {\r\n        const _left = this.leftMenu[leftIndex];\r\n\r\n        if (_left != \"\") {\r\n          //表格數字\r\n          const itemName = this.itemList.byKey[_left]['name'];\r\n          //全天卡片列表\r\n          this.tableData.card.single[_left] = {\r\n            noon: 0,\r\n            night: 0\r\n          }\r\n          let _data = {}\r\n          let sumAll = {}\r\n          this.periodKey.forEach(period => {\r\n            _data[period] = {\r\n              menu: itemName\r\n            }\r\n            //加總\r\n            sumAll[period] = {\r\n              is_take: 0,\r\n              not_take: 0,\r\n            }\r\n\r\n            for (let timeIndex = 0; timeIndex < this.orderTime[period].length; timeIndex++) {\r\n              const _time = this.orderTime[period][timeIndex];\r\n              const _timeData = this.tableColumns.single[_left][_time];\r\n\r\n              if (_time != \"menu\") {\r\n                let _total = _timeData.not_take + _timeData.is_take;\r\n                \r\n                _data[period][_time] = _timeData.not_take + \" / \" + _total;\r\n                sumAll[period].not_take += _timeData.not_take;\r\n                sumAll[period].is_take += _timeData.is_take;\r\n\r\n                if (period != \"all\") {\r\n                  this.tableData.card.single[_left][period] += _total;\r\n                }\r\n              }\r\n            }\r\n\r\n            _data[period][\"total\"] = sumAll[period].not_take + \" / \" + (sumAll[period].not_take + sumAll[period].is_take);\r\n            this.tableData[period].push(_data[period]);\r\n          });\r\n        }\r\n      }\r\n      //表格套餐資料\r\n      for (const setKey in this.tableColumns.set) {\r\n        if (Object.hasOwnProperty.call(this.tableColumns.set, setKey)) {\r\n          const setData = this.tableColumns.set[setKey];\r\n          const itemName = this.setList.byKey[setKey]['title'];\r\n          //全天卡片列表\r\n          this.tableData.card.set[setKey] = {\r\n            noon: 0,\r\n            night: 0\r\n          }\r\n          \r\n          let _data = {}\r\n          let sumAll = {}\r\n          this.periodKey.forEach(period => {\r\n            _data[period] = {\r\n              menu: itemName\r\n            }\r\n            //加總\r\n            sumAll[period] = {\r\n              is_take: 0,\r\n              not_take: 0,\r\n            }\r\n\r\n            for (let timeIndex = 0; timeIndex < this.orderTime[period].length; timeIndex++) {\r\n              const _time = this.orderTime[period][timeIndex];\r\n              const _timeData = setData[_time];\r\n\r\n              if (_time != \"menu\") {\r\n                let _total = _timeData.not_take + _timeData.is_take;\r\n\r\n                _data[period][_time] = _timeData.not_take + \" / \" + _total;\r\n                sumAll[period].not_take += _timeData.not_take;\r\n                sumAll[period].is_take += _timeData.is_take;\r\n\r\n                if (period != \"all\") {\r\n                  this.tableData.card.set[setKey][period] += _total;\r\n                }\r\n              }\r\n            }\r\n\r\n            _data[period][\"total\"] = sumAll[period].not_take + \" / \" + (sumAll[period].not_take + sumAll[period].is_take);\r\n            this.tableData[period].push(_data[period]);\r\n          });\r\n        }\r\n      }\r\n      \r\n      //停止loading\r\n      this.isLoading = false;\r\n    },\r\n    //自動更新\r\n    autoUpdate: function () {\r\n      this.interval = setInterval(() => {\r\n        this.selectForm();\r\n        console.log(moment().format() + ' loading complete');\r\n      },5000);\r\n    },\r\n    stopUpdate: function() {\r\n      clearInterval(this.interval);\r\n    },\r\n  }\r\n}\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./OrderAnalysis.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./OrderAnalysis.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./OrderAnalysis.vue?vue&type=template&id=b6f2ed7c&\"\nimport script from \"./OrderAnalysis.vue?vue&type=script&lang=js&\"\nexport * from \"./OrderAnalysis.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}